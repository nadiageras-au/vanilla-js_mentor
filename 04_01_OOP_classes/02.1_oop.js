//Что такое ООП

//Что такое Класс
//Расширяемый шаблон для сздания однотипных объектов
// синтаксический сахар над функцией конструктор

// ключевое слово class, constructor, методы создаются function(){} чтобы не плодить в памяти создание методов при каждом создании инстанса


// Какие есть принципы ООП?
//===========================================================================================
// Абстракция (Abstraction)выделить только те характеристики и функциональность,
// которые являются существенными для взаимодействия с объектом.//name, age, address, position, skills
//===========================================================================================

// Инкапсуляция (Encapsulation): заключается в объединении данных и методов, которые оперируют
// с этими данными, в единый объект. Это позволяет скрыть внутреннюю реализацию объекта
// от внешнего мира и обеспечивает контролируемый доступ к его состоянию и поведению.
// Класс "Человек"
// class Person {
//     constructor(name) {
//         // Приватные свойства
//         this._name = name;
//     }
//     // Публичные методы для доступа к приватным свойствам
//     getName() {
//         return this._name;
//     }
//     // Методы для изменения приватных свойств
//     setName(name) {
//         this._name = name;
//     }
// }

//===========================================================================================
//  Наследование (Inheritance):позволяет создавать новые классы на основе существующих классов,
//  наследуя их свойства и методы. Это способствует повторному использованию кода, уменьшает
//  дублирование и облегчает поддержку программного обеспечения. (prototype)
//===========================================================================================

//  Полиморфизм (Polymorphism):Полиморфизм позволяет объектам различных типов обрабатываться
//  как объекты одного и того же базового типа. Это позволяет использовать общий интерфейс
//  для работы с различными типами данных, что делает код более гибким и расширяемым.
//===========================================================================================
